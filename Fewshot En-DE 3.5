
from datasets import load_dataset
from sacrebleu import BLEU
import openai

openai.api_key = "apikey"

# Load the dataset
dataset = load_dataset("wmt14", "de-en", split="test")
train_dataset = load_dataset("wmt14", "de-en", split="train[:3000]")

# Function to generate few-shot prompt
def generate_few_shot_prompt(train_examples, test_sentence):
    prompt = ""
    for example in train_examples:
        prompt += f"English: {example['translation']['en']}\nGerman: {example['translation']['de']}\n\n"
    prompt += f"English: {test_sentence}\nGerman:"
    return prompt

# Function to perform few-shot translation and calculate BLEU score
def few_shot_translation_and_bleu(num_shots):
    translations = []
    for example in dataset:
        # Select few-shot examples
        few_shot_examples = train_dataset.shuffle(seed=42).select(range(num_shots))
        prompt = generate_few_shot_prompt(few_shot_examples, example["translation"]["en"])

        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": prompt},
            ],
            max_tokens=150,
            temperature=0.1,
            top_p=1,
            n=1,
        )
        translation = response.choices[0].message["content"].strip()
        translations.append(translation)

        # Save the translated text to a file
        with open(f"translations_{num_shots}_shots.txt", "a") as file:
            file.write(f"Original English: {example['translation']['en']}\n")
            file.write(f"Translated German: {translation}\n\n")

    # Calculate BLEU score
    bleu = BLEU()
    references = [example["translation"]["de"] for example in dataset]
    score = bleu.corpus_score(translations, [references])
    print(f"BLEU score for {num_shots} shots: {score.score}")

    # Writing BLEU score to a file
    with open(f"bleu_score_{num_shots}_shots.txt", "w") as file:
        file.write(f"BLEU score for {num_shots} shots: {score.score}")

# Perform few-shot translation and BLEU score calculation for different shot numbers
for num_shots in [5,10,50]:
    few_shot_translation_and_bleu(num_shots)
